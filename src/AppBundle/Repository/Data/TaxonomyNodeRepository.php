<?php

namespace AppBundle\Repository\Data;

use Doctrine\ORM\EntityRepository;

/**
 * TaxonomyNodeRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class TaxonomyNodeRepository extends EntityRepository
{
    public function getDatabases($fennec_id){
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('t.taxonomyNodeId', 'db.name')
            ->from('AppBundle\Entity\Data\TaxonomyNode', 't')
            ->innerJoin('AppBundle\Entity\Data\Db','db','WITH', 't.db = db.id')
            ->where('t.fennec = :fennec_id')
            ->setParameter('fennec_id', $fennec_id);
        $query = $qb->getQuery();
        $data = $query->getArrayResult();

        $result = array();
        for($i=0;$i<sizeof($data);$i++){
            $result[$data[$i]['name']] = $data[$i]['taxonomyNodeId'];
        }
        return $result;
    }

    public function getLineage($taxonomy_node_id){
        $result = array();
        $previousParent = $taxonomy_node_id;
        $parent = $this->getParent($taxonomy_node_id);
        while ($parent !== $previousParent) {
            array_unshift($result, $this->getOrganismName($parent));
            $previousParent = $parent;
            $parent = $this->getParent($previousParent);
        }
        return $result;
    }

    /**
     * @param $taxonomy_node_id
     * @return $parent_taxonomy_node_id
     */
    private function getParent($taxonomy_node_id)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('t.parentTaxonomyNodeId')
            ->from('AppBundle\Entity\Data\TaxonomyNode', 't')
            ->where('t.taxonomyNodeId = :taxonomyNodeId')
            ->setParameter('taxonomyNodeId', $taxonomy_node_id);
        $query = $qb->getQuery();

        $result = $query->getSingleResult();
        return $result['parentTaxonomyNodeId'];
    }

    private function getOrganismName($taxonomy_node_id)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('o.scientificName')
            ->from('AppBundle:Organism', 'o')
            ->innerJoin('AppBundle\Entity\Data\TaxonomyNode','t','WITH', 'o.fennecId = t.fennec')
            ->where('t.taxonomyNodeId = :taxonomyNodeId')
            ->setParameter('taxonomyNodeId', $taxonomy_node_id);
        $query = $qb->getQuery();
        return $query->getSingleResult()['scientificName'];
    }
}
